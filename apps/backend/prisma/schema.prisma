// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL" )
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  role         UserRole @default(USER)
  organizationId String?
  organization Organization? @relation(fields: [organizationId], references: [id])
  scans        Scan[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("users")
}

model Organization {
  id        String   @id @default(cuid())
  name      String
  planType  PlanType @default(FREE)
  settings  Json?
  users     User[]
  scans     Scan[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("organizations")
}

model Scan {
  id             String      @id @default(cuid())
  url            String
  userId         String
  organizationId String?
  status         ScanStatus  @default(PENDING)
  results        Json?
  errorMessage   String?
  user           User        @relation(fields: [userId], references: [id])
  organization   Organization? @relation(fields: [organizationId], references: [id])
  scanResults    ScanResult[]
  createdAt      DateTime    @default(now())
  completedAt    DateTime?
  updatedAt      DateTime    @updatedAt

  @@map("scans")
}

model ScanResult {
  id        String   @id @default(cuid())
  scanId    String
  ruleId    String
  severity  Severity
  element   String?
  message   String
  suggestion String?
  scan      Scan     @relation(fields: [scanId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@map("scan_results")
}

enum UserRole {
  ADMIN
  USER
  VIEWER
}

enum PlanType {
  FREE
  STARTER
  PROFESSIONAL
  ENTERPRISE
}

enum ScanStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
}

enum Severity {
  CRITICAL
  SERIOUS
  MODERATE
  MINOR
}
